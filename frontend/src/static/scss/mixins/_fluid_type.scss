// See https://css-tricks.com/snippets/css/fluid-typography/

// >>> Controllers — START
@use "../controllers/functions" as *; // controllers for functions
// <<<<< Controllers — END


// The equation
//
// body {
// 	font-size: calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));
// }

// The mixin
//
// @use "sass:math";
// // See https://stackoverflow.com/questions/12328259/how-do-you-strip-the-unit-from-any-number-in-sass
// @function strip-unit($value) {
// 	@return math.div($value, ($value * 0 + 1));
// }

@mixin fluid_type(
	// >>>>> VIEWPORT <<<<<
	$viewport-min: 20em, // Set global values
	$viewport-max: 100em, // Set global values
	// >>>>> MOBILE <<<<<
	$font-size-min: null,
	$line-height-mobile: null,
	// >>>>> DESKTOP <<<<<
	$font-size-max: null,
	$line-height-desktop: null,
	// >>>>> IMPORTANT <<<<<
	$important: null
) {
	// $u1: unit($viewport-min);
	// $u2: unit($viewport-max);
	// $u3: unit($font-size-min);
	// $u4: unit($font-size-max);

	// @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
	// 	& {
			font-size: $font-size-min #{$important};
			line-height: $line-height-mobile #{$important};

			// @if $important {
			// 	$important: "!important";
			// } @else {
			// 	$important: null;
			// }

			@media screen and (min-width: $viewport-min) and (max-width: 575.98px) {
				font-size: calc($line-height-mobile * calc(#{$font-size-min} + #{strip-unit($font-size-max - $font-size-min)} * ((100vw - #{$viewport-min}) / #{strip-unit($viewport-max - $viewport-min)}))) #{$important};
				line-height: $line-height-mobile #{$important};
			}

			@media screen and (min-width: 576px) and (max-width: $viewport-max) {
				font-size: calc($line-height-desktop * calc(#{$font-size-min} + #{strip-unit($font-size-max - $font-size-min)} * ((100vw - #{$viewport-min}) / #{strip-unit($viewport-max - $viewport-min)}))) #{$important};
				line-height: $line-height-desktop #{$important};
			}

			@media screen and (min-width: $viewport-max) {
				font-size: $font-size-max #{$important};
				line-height: $line-height-desktop #{$important};
			}

			// @if $important {
			// 	font-size: $font-size-min !important;
			// 	line-height: $line-height-mobile !important;

			// 	@media screen and (min-width: $viewport-min) and (max-width: 575.98px) {
			// 		font-size: calc($line-height-mobile * calc(#{$font-size-min} + #{strip-unit($font-size-max - $font-size-min)} * ((100vw - #{$viewport-min}) / #{strip-unit($viewport-max - $viewport-min)}))) !important;
			// 		line-height: $line-height-mobile !important;
			// 	}

			// 	@media screen and (min-width: 576px) and (max-width: $viewport-max) {
			// 		font-size: calc($line-height-desktop * calc(#{$font-size-min} + #{strip-unit($font-size-max - $font-size-min)} * ((100vw - #{$viewport-min}) / #{strip-unit($viewport-max - $viewport-min)}))) !important;
			// 		line-height: $line-height-desktop !important;
			// 	}

			// 	@media screen and (min-width: $viewport-max) {
			// 		font-size: $font-size-max !important;
			// 		line-height: $line-height-desktop !important;
			// 	}
			// }

			// @if $important {
			// 	font-size: $font-size !important;
			// 	line-height: $line-height !important;
			// } @else {
			// 	font-size: $font-size;
			// 	line-height: $line-height;
			// }
	// 	}
	// }
}

// The formula
//
// @include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, $min_font, $max_font);
// $min_width: 20em;
// $max_width: 100em;
// $mob_multi: 1.5;
// $desk_multi: 1.2;

// h1,
// .h1 {
// 	@include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, 1.73rem, 2.5rem);
// }

// h2,
// .h2 {
// 	@include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, 1.54rem, 2rem);
// }

// h3,
// .h3 {
// 	@include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, 1.44rem, 1.75rem);
// }

// h4,
// .h4 {
// 	@include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, 1.35rem, 1.5rem);
// }

// h5,
// .h5 {
// 	@include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, 1.25rem, 1.25rem);
// }

// h6,
// .h6 {
// 	@include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, 1rem, 1rem);
// }

// p,
// .p {
// 	@include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, 1rem, 1rem);
// }

// small,
// .small {
// 	@include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, 0.875rem, 0.875rem);
// }
