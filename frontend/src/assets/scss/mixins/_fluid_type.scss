// See https://css-tricks.com/snippets/css/fluid-typography/

// >>> Controllers — START
@use "../controllers/functions" as *; // controllers for functions
// <<<<< Controllers — END

// The equation
//
// body {
// 	font-size: calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));
// }

// The mixin
//
// @use "sass:math";
//
// See https://stackoverflow.com/questions/12328259/how-do-you-strip-the-unit-from-any-number-in-sass
// @function strip_unit($value) {
// 	@return math.div($value, ($value * 0 + 1));
// }

// ===============================================
// ## ############################################
// ===============================================

@mixin fluid_type(
	// >>>>> TARGET VIEWPORT <<<<<
	// prettier-ignore
	// Set global values
	$target-vw-min: 20em /*(320px)*/,
	// Set global values
	$target-vw-max: 100em /*(1600px)*/,

	// >>>>> SOURCE VIEWPORT <<<<<
	// prettier-ignore
	// e.g. 375px
	$source-vw-min: null,
	// e.g. 1280px
	$source-vw-max: null,

	// >>>>> MOBILE <<<<<
	$font-size-min: null,
	$line-height-mobile: null,

	// >>>>> DESKTOP <<<<<
	$font-size-max: null,
	$line-height-desktop: null,

	// >>>>> IMPORTANT <<<<<
	$important: null
) {
	// Fallback: if no designer widths, reuse the target ones
	$source-vw-min: if($source-vw-min == null, $target-vw-min, $source-vw-min);
	$source-vw-max: if($source-vw-max == null, $target-vw-max, $source-vw-max);

	// ---------------------------------
	// 1. normalise viewport numbers
	//    (turn any em into px so maths is easy)
	// ---------------------------------
	$source-px-min: if(
		unit($source-vw-min) == "em" or unit($source-vw-min) == "rem",
		strip_unit(to_px($source-vw-min)),
		strip_unit($source-vw-min)
	);
	$source-px-max: if(
		unit($source-vw-max) == "em" or unit($source-vw-max) == "rem",
		strip_unit(to_px($source-vw-max)),
		strip_unit($source-vw-max)
	);
	$target-px-min: strip_unit(to_px($target-vw-min)); // target min is declared in em
	$target-px-max: strip_unit(to_px($target-vw-max)); // target max is declared in em

	// ===============================================
	// ## ############################################
	// ===============================================

	// Option A – Pick a slope, compute matching multiplier
	// $lh-desktop-slope: 0.290909;                         // your preferred slope (0.15–0.3 range)
	// $F: $fs1 / ($fs0 - $Δfs * $lh-desktop-slope);        // computed multiplier (≈2.2)

	// Option B – Pick a multiplier, compute matching slope
	// $F: 2.2;                                          // your preferred multiplier
	// $lh-desktop-slope: ($fs0 - $fs1 / $F) / $Δfs;        // computed slope (≈0.29)

	/////////////////////
	// ==================
	// ## Viewport ranges
	// ==================
	//
	// Span from `$target-vw-min` to transition point (mobile breakpoint)
	$target-vw-mobile: 576 - strip_unit(to_px($target-vw-min));
	// Span from transition point to `$target-vw-max` (desktop breakpoint)
	$target-vw-desktop: strip_unit(to_px($target-vw-max) - 576);
	// Full viewport range from `$target-vw-min` to `$target-vw-max`
	$target-vw-full: strip_unit(to_px($target-vw-max) - to_px($target-vw-min));

	// Span from `$source-vw-min` to transition point (mobile breakpoint)
	$source-vw-mobile: 576 - strip_unit(to_px($source-vw-min));
	// Span from transition point to `$source-vw-max` (desktop breakpoint)
	$source-vw-desktop: strip_unit(to_px($source-vw-max) - 576);
	// Full viewport range from `$source-vw-min` to `$source-vw-max`
	$source-vw-full: strip_unit(to_px($source-vw-max) - to_px($source-vw-min));

	///////////////////////////////////////
	// ====================================
	// ## Font-size progression & direction
	// ====================================
	//
	// Signed delta (`font-size` difference)
	$fs-delta: strip_unit(to_px($font-size-max) - to_px($font-size-min));
	// Absolute `font-size` difference (always positive)
	$fs-range: abs($fs-delta);
	// `font-size`: 1 = GROWING | -1 = SHRINKING
	$fs-direction: if($fs-delta >= 0, 1, -1);
	// `font-size` at transition point
	$fs-threshold: strip_unit(to_px($font-size-min) + $fs-delta * ($target-vw-mobile / $target-vw-full));
	// Mobile `font-size` slope
	// prettier-ignore
	$fs-scale-mobile: if(
		$fs-direction == 1,                       // Adjust `font-size` scaling on mobile
		$target-vw-full / $target-vw-mobile,      // - Growing: compress to match desktop pace (desktop > mobile)
		($target-vw-full / $target-vw-mobile) / 2 // - Shrinking: reduce compression for smoother scale (mobile > desktop)
	);

	$fs-raw-min: to_px($font-size-min); // raw input before any adjustments
	$fs-raw-max: to_px($font-size-max); // raw input before any adjustments

	$fs-delta-source: strip_unit(to_px($font-size-max) - $fs-raw-min);
	$fs-range-source: abs($fs-delta-source);
	$fs-direction-source: if($fs-delta-source >= 0, 1, -1);

	// Mobile `font-size` slope
	// prettier-ignore
	$fs-scale-mobile-source: if(
		$fs-direction-source == 1,
		$source-vw-full / $source-vw-mobile,
		$source-vw-full / $source-vw-mobile / 2,
	);

	@if $source-vw-min != null {
		$font-size-min: to_px($font-size-min) -
			(($fs-range * $fs-direction) * (($source-px-min - $target-px-min) / $target-vw-full) * $fs-scale-mobile);
	}

	@if $source-vw-max != null {
		$font-size-max: to_px($font-size-min) +
			(($fs-range * $fs-direction) * (($target-px-max - $source-px-min) / $source-vw-full));
	}

	///////////////////////////////////
	// ================================
	// ## Line-height progression logic
	// ================================
	//
	// Target average `line-height` multiplier at transition point
	$lh-target: ($line-height-mobile + $line-height-desktop) / 2; // 1.35
	// `line-height` multiplier change across mobile range
	$lh-mobile-slope: (strip_unit($fs-raw-min) - ($lh-target * strip_unit(to_px($fs-raw-max)) / $line-height-mobile)) /
		($fs-range * $fs-direction);
	// `line-height` multiplier change across desktop range
	$lh-desktop-slope: (strip_unit($fs-raw-max) - ($lh-target * $fs-threshold / $line-height-desktop)) /
		($fs-range * $fs-direction);

	// ################################################## //

	@media (max-width: calc(#{to_em($source-vw-min)} - to_em(0.02px))) {
		line-height: $line-height-mobile #{$important};
	}

	@media (max-width: calc(#{$target-vw-min} - to_em(0.02px))) {
		font-size: $font-size-min #{$important};
	}

	@media (min-width: $target-vw-min) and (max-width: #{to_em(575.98px)}) {
		font-size:
			calc(
				#{$fs-raw-min} +
					(
						(#{$fs-range} * #{$fs-direction}) *
							(
								((100vw - #{to_px($source-vw-min)}) / #{$source-vw-full}) * #{$fs-scale-mobile}
									/* mobile slope */
							)
					)
			),
			#{$important};
	}

	@media (min-width: to_em($source-vw-min)) and (max-width: #{to_em(575.98px)}) {
		// line-height: #{$line-height-mobile} #{$important};
		line-height: calc(
				(
						#{$fs-raw-min} -
							(
								(#{$fs-range} * #{$fs-direction}) *
									(
										((100vw - #{to_px($source-vw-min)}) / #{$source-vw-full}) *
											(#{$fs-scale-mobile} * #{$lh-mobile-slope}) /* mobile slope */
									)
							)
					) *
					(#{$line-height-mobile} * 1) /* keep the declared line-height at the smallest viewport */
			)
			#{$important};
	}

	@media (min-width: to_em(576px)) and (max-width: calc(#{$target-vw-max} - to_em(0.02px))) {
		font-size:
			calc(
				#{$fs-raw-min} +
					(
						(#{$fs-range} * #{$fs-direction}) *
							(((100vw - #{to_px($source-vw-min)}) / #{$source-vw-full}) * 1 /* desktop slope */)
					)
			),
			#{$important};
		// line-height: #{$line-height-desktop} #{$important};
		line-height: calc(
				(
						#{$fs-raw-max} -
							(
								(#{$fs-range} * #{$fs-direction}) *
									(
										(#{to_px($source-vw-max)} - 100vw) / #{$source-vw-desktop} *
											(1 * #{$lh-desktop-slope}) /* desktop slope */
									)
							)
					) *
					(#{$line-height-desktop} * 1) /* keep the declared line-height at the largest viewport */
			)
			#{$important};
	}

	@media (min-width: to_em($source-vw-max)) {
		line-height: $line-height-desktop #{$important};
	}

	@media (min-width: $target-vw-max) {
		font-size: $font-size-max #{$important};
	}
}

// ===============================================
// ## ############################################
// ===============================================

// The formula
//
// @include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, $min_font, $max_font);
// $min_width: 20em;
// $max_width: 100em;
// $mob_multi: 1.5;
// $desk_multi: 1.2;

// element_example,
// .class_example {
// 	@include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, 1.73rem, 2.5rem);
// }
