// See https://css-tricks.com/snippets/css/fluid-typography/

// >>> Controllers — START
@use "../controllers/functions" as *; // controllers for functions
// <<<<< Controllers — END

// The equation
//
// body {
// 	font-size: calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));
// }

// The mixin
//
// @use "sass:math";
//
// See https://stackoverflow.com/questions/12328259/how-do-you-strip-the-unit-from-any-number-in-sass
// @function strip_unit($value) {
// 	@return math.div($value, ($value * 0 + 1));
// }

@mixin fluid_type(
	// >>>>> VIEWPORT <<<<<
	// prettier-ignore
	$viewport-min: 20em /*(320px)*/,
	// Set global values
	$viewport-max: 100em /*(1600px)*/,
	// Set global values
	// >>>>> MOBILE <<<<<
	$font-size-min: null,
	$line-height-mobile: null,
	// >>>>> DESKTOP <<<<<
	$font-size-max: null,
	$line-height-desktop: null,
	// >>>>> IMPORTANT <<<<<
	$important: null
) {
	// Option A – Pick a slope, compute matching multiplier
	// $desktop-slope: 0.290909;                         // your preferred slope (0.15–0.3 range)
	// $F: $fs1 / ($fs0 - $Δfs * $desktop-slope);        // computed multiplier (≈2.2)

	// Option B – Pick a multiplier, compute matching slope
	// $F: 2.2;                                          // your preferred multiplier
	// $desktop-slope: ($fs0 - $fs1 / $F) / $Δfs;        // computed slope (≈0.29)

	// ################################################## //

	// Viewport ranges
	$vw-range-mobile: 576 - round_3(strip_unit(to_px($viewport-min))); // span from min viewport to 576px (mobile range)
	$vw-range-desktop: round_3(strip_unit(to_px($viewport-max) - 576)); // span from 576px to max viewport (desktop range)
	$vw-range-full: round_3(
		strip_unit(to_px($viewport-max) - to_px($viewport-min))
	); // total responsive range from min to max
	$vw-scale-mobile: $vw-range-full / $vw-range-mobile; // scales mobile slope to match full range progress rate

	// Font-size slope & direction helpers
	$fs-delta: round_3(strip_unit(to_px($font-size-max) - to_px($font-size-min))); // signed delta (`font-size` difference)
	$fs-range: abs($fs-delta); // absolute `font-size` difference (keep output always positive)
	$fs-direction: if($fs-delta >= 0, 1, -1); // 1 if `font-size` is growing, -1 if it's shrinking
	$fs-threshold: strip_unit(
		to_px($font-size-min) + $fs-delta * ($vw-range-mobile / $vw-range-full)
	); // interpolated `font-size` at 576px

	// Line-height control
	$lh-target: ($line-height-mobile + $line-height-desktop) / 2; // average multiplier to aim for at query threshold

	// ################################################## //

	// Slope calculation for multiplier progression
	$mobile-slope: (
			strip_unit(to_px($font-size-min)) - ($lh-target * strip_unit(to_px($font-size-max)) / $line-height-mobile)
		) /
		($fs-range * $fs-direction);

	// Slope calculation for multiplier progression
	$desktop-slope: (strip_unit(to_px($font-size-max)) - ($lh-target * $fs-threshold / $line-height-desktop)) /
		($fs-range * $fs-direction);

	@media (max-width: 319.98px) {
		font-size: $font-size-min #{$important};
		line-height: $line-height-mobile #{$important};
	}

	@media (min-width: $viewport-min) and (max-width: 575.98px) {
		font-size: clamp(
				#{min($font-size-min, $font-size-max)},
				calc(
					#{$font-size-min} +
						(
							(#{$fs-range} * #{$fs-direction}) *
								(
									((100vw - #{to_px($viewport-min)}) / #{$vw-range-full}) * #{$vw-scale-mobile}
										/* mobile slope */
								)
						)
				),
				#{max($font-size-min, $font-size-max)}
			)
			#{$important};
		// line-height: #{$line-height-mobile} #{$important};
		line-height: calc(
				(
						#{$font-size-min} -
							(
								(#{$fs-range} * #{$fs-direction}) *
									(
										((100vw - #{to_px($viewport-min)}) / #{$vw-range-full}) *
											(#{$vw-scale-mobile} * #{$mobile-slope}) /* mobile slope */
									)
							)
					) *
					(#{$line-height-mobile} * 1) /* keep the declared line-height at the smallest viewport */
			)
			#{$important};
	}

	@media (min-width: 576px) and (max-width: calc(#{$viewport-max} - 0.02px)) {
		font-size: clamp(
				#{min($font-size-min, $font-size-max)},
				calc(
					#{$font-size-min} +
						(
							(#{$fs-range} * #{$fs-direction}) *
								(((100vw - #{$viewport-min}) / #{$vw-range-full}) * 1 /* desktop slope */)
						)
				),
				#{max($font-size-min, $font-size-max)}
			)
			#{$important};
		// line-height: #{$line-height-desktop} #{$important};
		line-height: calc(
				(
						#{$font-size-max} -
							(
								(#{$fs-range} * #{$fs-direction}) *
									(
										(#{to_px($viewport-max)} - 100vw) / #{$vw-range-desktop} * (1 * #{$desktop-slope})
											/* desktop slope */
									)
							)
					) *
					(#{$line-height-desktop} * 1) /* keep the declared line-height at the largest viewport */
			)
			#{$important};
	}

	@media (min-width: $viewport-max) {
		font-size: $font-size-max #{$important};
		line-height: $line-height-desktop #{$important};
	}
}

// The formula
//
// @include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, $min_font, $max_font);
// $min_width: 20em;
// $max_width: 100em;
// $mob_multi: 1.5;
// $desk_multi: 1.2;

// element_example,
// .class_example {
// 	@include fluid_type($min_width, $max_width, $mob_multi, $desk_multi, 1.73rem, 2.5rem);
// }
